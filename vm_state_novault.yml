---
- hosts: all
  gather_facts: false
  connection: local
  vars:
    state: poweredon
  tasks:
  - name: Get reverse DNS name from IP
    command: echo "{{ ip_address | ipaddr('revdns') }}"
    register: revname
    when: state == "absent"

  - name: Get reverse DNS zone from IP
    shell: echo "{{ ip_address | ipaddr('revdns') }}" | cut -d'.' -f 3,4,5,6,7
    register: revzone
    when: state == "absent"

  - name: Get domain from hostname
    shell: echo "{{ inventory_hostname }}" | cut -d'.' -f 2,3
    register: domain
    when: state == "absent"

  - name: Show debug output
    debug:
      msg:
       - "inventory_hostname: {{ inventory_hostname }}"
       - "ip_address: {{ ip_address }}"
       - "revname: {{ revname.stdout }}"
       - "revzone: {{ revzone.stdout }}"
       - "domain: {{ domain.stdout }}"
    when: state == "absent"

  - name: Remove DNS A record if disposing of VM
    nsupdate:
      key_name: "{{ dns_key_name }}"
      key_secret: "{{ dns_key_secret }}"
      server: "{{ dns_server }}"
      zone: "{{ domain.stdout }}"
      record: "{{ inventory_hostname }}."
      value: "{{ ip_address }}"
      ttl: 3000
      type: "A"
    when: state == "absent"

  - name: Remove DNS PTR record if disposing of VM
    nsupdate:
      key_name: "{{ dns_key_name }}"
      key_secret: "{{ dns_key_secret }}"
      server: "{{ dns_server }}"
      zone: "{{ revzone.stdout }}"
      record: "{{ revname.stdout }}"
      value: "{{ inventory_hostname }}."
      ttl: 3000
      type: "PTR"
    when: state == "absent"

  - name: Shutdown VM first if delete required
    vmware_guest:
      hostname: "{{ vcenter_host }}"
      username: "{{ vcenter_user }}"
      password: "{{ vcenter_pass }}"
      folder: "{{ vcenter_datacenter }}/vm/{{ vcenter_folder }}"
      name: "{{ inventory_hostname }}"
      validate_certs: no
      state: "poweredoff"
    when: state == "absent"

  - name: Set VM to desired state
    vmware_guest:
      hostname: "{{ vcenter_host }}"
      username: "{{ vcenter_user }}"
      password: "{{ vcenter_pass }}"
      folder: "{{ vcenter_datacenter }}/vm/{{ vcenter_folder }}"
      name: "{{ inventory_hostname }}"
      validate_certs: no
      state: "{{ state }}"

