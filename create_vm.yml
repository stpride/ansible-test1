---
- hosts: all
  gather_facts: false
  connection: local
  vars_files:
  - "/var/lib/awx/secrets/vcenter.yml"
  - "/var/lib/awx/secrets/dns.yml"
  tasks:
  - name: Check AUS DNS vars before deploying
    fail:
      msg: "A required variable is not defined!"
    tags: aus
    when: (dns_key_aus is undefined) or (dns_secret_aus is undefined) or (dns_server_aus is undefined)

  - name: Check SFO DNS vars before deploying
    fail:
      msg: "A required variable is not defined!"
    tags: sfo
    when: (dns_key_sfo is undefined) or (dns_secret_sfo is undefined) or (dns_server_sfo is undefined)

  - name: Provision VM
    vmware_guest:
      hostname: "{{ vcenter_host }}"
      username: "{{ vcenter_user }}"
      password: "{{ vcenter_pass }}"
      name: "{{ inventory_hostname }}"
      folder: "{{ vmfolder }}"
      template: "template-ubuntu-16.04-64bit-8gb-v1.0"
      cluster: "{{ cluster }}"
      resource_pool: "{{ resource_pool }}"
      datacenter: "{{ datacenter }}"
      guest_id: "ubuntu64Guest"
      disk:
      - size_gb: 10
        type: "thin"
        autoselect_datastore: yes
        datastore: "{{ datastore }}"
      wait_for_ip_address: yes
      hardware:
        memory_mb: 1024
        num_cpus: 1
      networks:
      - name: "{{ network_name }}"
        ip: "{{ ip_address }}"
        device_type: "{{ device_type }}"
        gateway: "{{ gateway }}"
        domain: "{{ domain.stdout }}"
        netmask: "{{ netmask }}"
        dns_servers:
        - "{{ dns1 }}"
        - "{{ dns2 }}"
      customization:
        dns_servers:
        - "{{ dns1 }}"
        - "{{ dns2 }}"
        domain: "{{ domain.stdout }}"
        hostName: "{{ inventory_hostname }}"
        computerName: "{{ inventory_hostname }}"
      validate_certs: no
      state: present
    register: vmstatus

  - debug:
      msg: "Deploy message is: {{ vmstatus }}"

  - name: Add A record (AUS)
    nsupdate:
      key_name: "{{ dns_key_aus }}"
      key_secret: "{{ dns_secret_aus }}"
      server: "{{ dns_server_aus }}"
      zone: "{{ domain.stdout }}"
      record: "{{ inventory_hostname }}."
      value: "{{ ip_address }}"
      ttl: 3000
      type: "A"
      state: present
    tags: aus
    when: not vmstatus.failed

  - name: Add A record (SFO)
    nsupdate:
      key_name: "{{ dns_key_sfo }}"
      key_secret: "{{ dns_secret_sfo }}"
      server: "{{ dns_server_sfo }}"
      zone: "{{ domain.stdout }}"
      record: "{{ inventory_hostname }}."
      value: "{{ ip_address }}"
      ttl: 3000
      type: "A"
      state: present
    tags: sfo
    when: not vmstatus.failed

  - name: Add PTR record (AUS)
    nsupdate:
      key_name: "{{ dns_key_aus }}"
      key_secret: "{{ dns_secret_aus }}"
      server: "{{ dns_server_aus }}"
      zone: "{{ revzone.stdout }}"
      record: "{{ revname.stdout }}"
      value: "{{ inventory_hostname }}."
      ttl: 3000
      type: "PTR"
      state: present
    tags: aus
    when: not vmstatus.failed

  - name: Add PTR record (SFO)
    nsupdate:
      key_name: "{{ dns_key_sfo }}"
      key_secret: "{{ dns_secret_sfo }}"
      server: "{{ dns_server_sfo }}"
      zone: "{{ revzone.stdout }}"
      record: "{{ revname.stdout }}"
      value: "{{ inventory_hostname }}."
      ttl: 3000
      type: "PTR"
      state: present
    tags: sfo
    when: not vmstatus.failed

